#修改TNAME: K2P-5.0 中的K2P-5.0为你需要编译的型号，注意名称要与configs/templates/目录下的名字相同
name: C.K2P-5.0

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Build Padavan"
        required: true
        default: "build"
  # release:
  #   types: [published]
  push:
    tags:
      - "v*"
  #  branches:
  #    - master
  #  schedule:
  #    - cron: 0 8 * * 5
  #watch:
  #  types: [started]

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
          token: ${{ secrets.R_TOKEN }}
        run: |
          sudo apt-get update
          sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fakeroot kmod \
          cpio git python-docutils gettext automake autopoint texinfo build-essential help2man \
          pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin
      - name: Clone source code
        run: |
          git clone -b chongshengB --depth=1 https://github.com/Yh793/rt-n56u.git /opt/rt-n56u
          cd /opt/rt-n56u/toolchain-mipsel
          sh dl_toolchain.sh
          mkdir -p /opt/images/
      - name: Recovery SSP bin files download from remote
        run: |
          cd /opt/rt-n56u/trunk
          sed -i "s#20210228#20210723#g" ./versions.inc
          cd /opt/rt-n56u/trunk/user/adguardhome
          sed -i "s#https://cdn.jsdelivr.net/gh/chongshengB/rt-n56u/trunk/user/adguardhome/AdGuardHome#https://cdn.jsdelivr.net/gh/Yh793/Padavan-build/adg/AdGuardHome#g" ./adguardhome.sh
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YY.MMDDHH
          utcOffset: "+08:00"
      #- name: Run Golang check
      #  run: sh ./scripts/go.sh

      #- name: SSH connection to Actions
      #  uses: P3TERX/ssh2actions@v1.0.0

      - name: Build Firmware
        env:
          TNAME: K2P-5.0 #PSG1218 K2P K2P_nano PSG1208 PSG1218_nano
        run: |
          cd /opt/rt-n56u/trunk
          if [ ! -f configs/templates/$TNAME.config ] ; then
          echo "configs/templates/$TNAME.config not found "
          exit 1
          fi
          cp -f configs/templates/$TNAME.config .config
          sed -i 's/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y/g' .config
          ################################################################################################
          #因不同型号配置功能不一样，所以先把配置项删除，如果你自己要添加其他的，也要写上删除这一条，切记！！！
          ################################################################################################
          sed -i '/CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_SERVER/d' .config #删除配置项SOFTETHERVPN
          sed -i '/CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CLIENT/d' .config #删除配置项SOFTETHERVPN
          sed -i '/CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CMD/d' .config #删除配置项SOFTETHERVPN        
          sed -i '/CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS/d' .config #删除配置项SS plus+
          sed -i '/CONFIG_FIRMWARE_INCLUDE_SSSERVER/d' .config #删除配置项SS server
          sed -i '/CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER/d' .config #删除配置项DNSFORWARDER
          sed -i '/CONFIG_FIRMWARE_INCLUDE_ADBYBY/d' .config #删除配置项adbyby plus+
          sed -i '/CONFIG_FIRMWARE_INCLUDE_FRPC/d' .config #删除配置项adbyby plus+
          sed -i '/CONFIG_FIRMWARE_INCLUDE_FRPS/d' .config #删除配置项adbyby plus+
          sed -i '/CONFIG_FIRMWARE_INCLUDE_TUNSAFE/d' .config #删除配置项adbyby plus+
          sed -i '/CONFIG_FIRMWARE_INCLUDE_ALIDDNS/d' .config #删除配置项阿里DDNS
          sed -i '/CONFIG_FIRMWARE_INCLUDE_SMARTDNS/d' .config
          sed -i '/CONFIG_FIRMWARE_INCLUDE_SRELAY/d' .config
          sed -i '/CONFIG_FIRMWARE_INCLUDE_KUMASOCKS/d' .config
          sed -i '/CONFIG_FIRMWARE_INCLUDE_IPT2SOCKS/d' .config
          sed -i '/CONFIG_FIRMWARE_INCLUDE_MICROSOCKS/d' .config
          sed -i '/CONFIG_FIRMWARE_INCLUDE_SFE/d' .config #删除配置项SFE加速
          #校园网相关
          sed -i '/CONFIG_FIRMWARE_INCLUDE_MENTOHUST/d' .config #删除配置项MENTOHUST
          sed -i '/CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT/d' .config #删除配置项SCUTCLIENT
          sed -i '/CONFIG_FIRMWARE_INCLUDE_NAPT66/d' .config
          sed -i '/CONFIG_FIRMWARE_INCLUDE_NJIT_CLIENT/d' .config
          sed -i '/CONFIG_FIRMWARE_INCLUDE_MINIEAP/d' .config
          sed -i '/CONFIG_FIRMWARE_INCLUDE_DOGCOM/d' .config
          #校园网相关
          sed -i 's/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y/g' .config
          ######################################################################
          #以下选项是定义你需要的功能（y=集成,n=忽略），重新写入到.config文件
          ######################################################################        
          echo "CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_SERVER=n" >> .config #SOFTETHERVPN
          echo "CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CLIENT=n" >> .config #SOFTETHERVPN
          echo "CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CMD=n" >> .config #SOFTETHERVPN
          echo "CONFIG_FIRMWARE_INCLUDE_SFE=n" >> .config #集成SFE加速
          #
          echo "CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS=y" >> .config #SS plus+
          echo "CONFIG_FIRMWARE_INCLUDE_V2RAY=y" >> .config #集成v2ray执行文件（3.8M左右)，如果不集成，会从网上下载下来执行，不影响正常使用
          echo "CONFIG_FIRMWARE_INCLUDE_TROJAN=y" >> .config #集成trojan执行文件(1.1M左右)，如果不集成，会从网上下载下来执行，不影响正常使用
          echo "CONFIG_FIRMWARE_INCLUDE_SSOBFS=n" >> .config # simple-obfs混淆插件
          echo "CONFIG_FIRMWARE_INCLUDE_SSSERVER=n" >> .config #SS server
          echo "CONFIG_FIRMWARE_INCLUDE_KUMASOCKS=n" >> .config #socks5
          #
          echo "CONFIG_FIRMWARE_INCLUDE_IPT2SOCKS=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_MICROSOCKS=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_SRELAY=n" >> .config #可以不集成
          echo "CONFIG_FIRMWARE_INCLUDE_TUNSAFE=n" >> .config #TUNSAFE
          echo "CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER=n" >> .config #DNSFORWARDER
          #
          echo "CONFIG_FIRMWARE_INCLUDE_FRPC=y" >> .config #内网穿透FRPC
          echo "CONFIG_FIRMWARE_INCLUDE_FRPS=y" >> .config #内网穿透FRPS
          #
          echo "CONFIG_FIRMWARE_INCLUDE_ADBYBY=n" >> .config #adbyby plus+
          echo "CONFIG_FIRMWARE_INCLUDE_KOOLPROXY=n" >> .config #KP广告过滤
          #
          echo "CONFIG_FIRMWARE_INCLUDE_SMARTDNS=n" >> .config #smartdns
          echo "CONFIG_FIRMWARE_INCLUDE_SMARTDNSBIN=n" >> .config #smartdns二进制文件
          echo "CONFIG_FIRMWARE_INCLUDE_ADGUARDHOME=n" >> .config
          #
          echo "CONFIG_FIRMWARE_INCLUDE_ALIDDNS=n" >> .config #阿里DDNS
          echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER=n" >> .config #zerotier ~1.3M
          #       
          echo "CONFIG_FIRMWARE_INCLUDE_CADDY=n" >> .config #在线文件管理服务
          echo "CONFIG_FIRMWARE_INCLUDE_CADDYBIN=n" >> .config #集成caddu执行文件，此文件有13M,请注意固件大小。如果不集成，会从网上下载下来执行，不影响正常使用
          #     
          echo "CONFIG_FIRMWARE_INCLUDE_WYY=n" >> .config #网易云解锁
          echo "CONFIG_FIRMWARE_INCLUDE_WYYBIN=n" >> .config #网易云解锁GO版本执行文件（4M多）注意固件超大小,不集成会自动下载
          #校园网相关
          echo "CONFIG_FIRMWARE_INCLUDE_MENTOHUST=n" >> .config #MENTOHUST
          echo "CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT=n" >> .config #SCUTCLIENT
          echo "CONFIG_FIRMWARE_INCLUDE_NJIT_CLIENT=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_MINIEAP=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_DOGCOM=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_NAPT66=n" >> .config
          #校园网相关
          #########################################################################################
          #自定义添加其它功能请参考源码configs/templates/目录下的config文件。按照上面的格式添加即可
          #格式如下：
          #sed -i '/自定义项/d' .config
          #echo "自定义项=y" >> .config
          #########################################################################################
          sudo ./clear_tree
          sudo ./build_firmware_modify $TNAME 0
          sudo mv -f images/*.trx /opt/images/${TNAME}_ChongshengB_${{ steps.current-time.outputs.formattedTime }}.trx
          echo "FNAME=$TNAME" >> $GITHUB_ENV
      - name: Organize files
        id: organize
        run: |
          echo "###########################"
          echo "###########################"
          echo "###########################"
          echo "::set-output name=status::success"
      - name: Upload packages - push to artifact file
        uses: actions/upload-artifact@main
        if: steps.organize.outputs.status == 'success'
        with:
          name: Padavan-packages
          path: /opt/images
      #上传到WeTransfer
      - name: Upload firmware to WeTransfer
        id: wetransfer
        if: steps.organize.outputs.status == 'success'
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet  -s -p 16 --no-progress /opt/images/*.trx 2>&1 | tee wetransfer.log
          echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
          echo "DOWNLOADURL2=$(cat wetransfer.log | grep -o -E "https?://[a-zA-Z0-9\.\/_&=@$%?~#-]*")" >> $GITHUB_ENV
          echo "::set-output name=status::success"
      #上传到奶牛快传
      - name: Upload firmware to cowtransfer
        id: cowtransfer
        if: steps.wetransfer.outputs.status == 'success'
        run: |
          curl -sL https://git.io/cowtransfer | sh
          ./cowtransfer-uploader -s -p 16 --hash /opt/images/*.trx 2>&1 | tee cowtransfer.log
          echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
          echo "DOWNLOADURL=$(cat cowtransfer.log | grep -o -E "https?://[a-zA-Z0-9\.\/_&=@$%?~#-]*")" >> $GITHUB_ENV
          echo "::set-output name=status::success"
      - name: Update README.md
        if: steps.cowtransfer.outputs.status == 'success'
        run: |
          git pull origin master
          sed "38c * 当前最新版本:${FNAME}.${{ steps.current-time.outputs.formattedTime }}.trx  最后编译时间: $(date -u -d '+8 hour' '+%Y-%m-%d %H:%M:%S')  下载地址: [奶牛快传](${DOWNLOADURL})  [WeTransfer](${DOWNLOADURL2})" README.md -i
          git config user.name  Robot
          git config user.email github-actions@github.com
          git commit -m "update README.md" -a
          git push
      - name: Remove obsolete firmwares on artifacts
        uses: c-hive/gha-remove-artifacts@v1.2.0
        if: always()
        with:
          age: '3 day'
          skip-recent: 5
